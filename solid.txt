- Single responsibility principle (Принцип единственной ответственности)
- Open-closed principle (Принцип открытости/закрытости)
- Liskov substitution principle (Принцип подстановки Лисков)
- Interface segregation principle (Принцип разделения интерфейса)
- Dependency inversion principle (Принцип инверсии зависимостей)
Придумал принципы Роберт Мартин в книге Чистый код
Используется только в ооп.

SRP - один класс ответственный за одну задачу. повышает тестируемость кода
OCP - Классы должны быть открыты для расширения, но закрыты для изменения.
LSP - потомок родителя имеет такое же свойство как и у родителя. 
ISP - нужно создавать несколько интерфейсов 
DIP - когда большая связь между классами и не хочется 
все время их менять, инттерфейс помогает их разделить

https://habr.com/ru/articles/688530/
